//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HW4WebSiteApplication.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Storefile", ReplyAction="http://tempuri.org/IService1/StorefileResponse")]
        string Storefile(string fileNameOrUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Storefile", ReplyAction="http://tempuri.org/IService1/StorefileResponse")]
        System.Threading.Tasks.Task<string> StorefileAsync(string fileNameOrUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/checkForAccount", ReplyAction="http://tempuri.org/IService1/checkForAccountResponse")]
        bool checkForAccount(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/checkForAccount", ReplyAction="http://tempuri.org/IService1/checkForAccountResponse")]
        System.Threading.Tasks.Task<bool> checkForAccountAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UploadCacheFile", ReplyAction="http://tempuri.org/IService1/UploadCacheFileResponse")]
        void UploadCacheFile(byte[] cacheFileBytes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UploadCacheFile", ReplyAction="http://tempuri.org/IService1/UploadCacheFileResponse")]
        System.Threading.Tasks.Task UploadCacheFileAsync(byte[] cacheFileBytes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateAccount", ReplyAction="http://tempuri.org/IService1/CreateAccountResponse")]
        void CreateAccount(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateAccount", ReplyAction="http://tempuri.org/IService1/CreateAccountResponse")]
        System.Threading.Tasks.Task CreateAccountAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAccountPassword", ReplyAction="http://tempuri.org/IService1/GetAccountPasswordResponse")]
        string GetAccountPassword(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAccountPassword", ReplyAction="http://tempuri.org/IService1/GetAccountPasswordResponse")]
        System.Threading.Tasks.Task<string> GetAccountPasswordAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/writeReciept", ReplyAction="http://tempuri.org/IService1/writeRecieptResponse")]
        void writeReciept(string firstName, string lastName, string creditCard, string concert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/writeReciept", ReplyAction="http://tempuri.org/IService1/writeRecieptResponse")]
        System.Threading.Tasks.Task writeRecieptAsync(string firstName, string lastName, string creditCard, string concert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRecieptList", ReplyAction="http://tempuri.org/IService1/GetRecieptListResponse")]
        string[] GetRecieptList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRecieptList", ReplyAction="http://tempuri.org/IService1/GetRecieptListResponse")]
        System.Threading.Tasks.Task<string[]> GetRecieptListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : HW4WebSiteApplication.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<HW4WebSiteApplication.ServiceReference1.IService1>, HW4WebSiteApplication.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Storefile(string fileNameOrUrl) {
            return base.Channel.Storefile(fileNameOrUrl);
        }
        
        public System.Threading.Tasks.Task<string> StorefileAsync(string fileNameOrUrl) {
            return base.Channel.StorefileAsync(fileNameOrUrl);
        }
        
        public bool checkForAccount(string uid) {
            return base.Channel.checkForAccount(uid);
        }
        
        public System.Threading.Tasks.Task<bool> checkForAccountAsync(string uid) {
            return base.Channel.checkForAccountAsync(uid);
        }
        
        public void UploadCacheFile(byte[] cacheFileBytes) {
            base.Channel.UploadCacheFile(cacheFileBytes);
        }
        
        public System.Threading.Tasks.Task UploadCacheFileAsync(byte[] cacheFileBytes) {
            return base.Channel.UploadCacheFileAsync(cacheFileBytes);
        }
        
        public void CreateAccount(string uid) {
            base.Channel.CreateAccount(uid);
        }
        
        public System.Threading.Tasks.Task CreateAccountAsync(string uid) {
            return base.Channel.CreateAccountAsync(uid);
        }
        
        public string GetAccountPassword(string username) {
            return base.Channel.GetAccountPassword(username);
        }
        
        public System.Threading.Tasks.Task<string> GetAccountPasswordAsync(string username) {
            return base.Channel.GetAccountPasswordAsync(username);
        }
        
        public void writeReciept(string firstName, string lastName, string creditCard, string concert) {
            base.Channel.writeReciept(firstName, lastName, creditCard, concert);
        }
        
        public System.Threading.Tasks.Task writeRecieptAsync(string firstName, string lastName, string creditCard, string concert) {
            return base.Channel.writeRecieptAsync(firstName, lastName, creditCard, concert);
        }
        
        public string[] GetRecieptList() {
            return base.Channel.GetRecieptList();
        }
        
        public System.Threading.Tasks.Task<string[]> GetRecieptListAsync() {
            return base.Channel.GetRecieptListAsync();
        }
    }
}
